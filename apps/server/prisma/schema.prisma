// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

model MainCategory {
  name          String    @id
  subCategories SubCategory[]
}

model SubCategory {
  name              String       @id
  mainCategory      MainCategory @relation(fields: [mainCategoryName], references: [name])
  mainCategoryName  String
  offers            Offer[]
}

model Offer {
  id              Int         @id @default(autoincrement())
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
  title           String      @db.VarChar(255)
  subCategory     SubCategory @relation(fields: [subCategoryName], references: [name])
  subCategoryName String
  price           Float
  description     String      @db.Text
  author          User        @relation(fields: [authorId], references: [id])
  authorId        Int
  images          OfferImage[]
}

model OfferImage {
  id              Int       @id @default(autoincrement())
  position        Int
  imageUUID       String
  image           File     @relation(fields: [imageUUID], references: [uuid])
  offerId         Int
  offer           Offer     @relation(fields: [offerId], references: [id])
}

model File {
  uuid            String    @id @default(uuid())
  extension       String
  offerImages     OfferImage[]
  userAvatar      User[]
}

model User {
  id              Int       @id @default(autoincrement())
  username        String    @unique
  firstname       String?
  lastname        String?
  email           String    @unique
  password        String
  registerDate    DateTime  @default(now())
  offers          Offer[]
  avatarUUID      String?
  avatar          File?      @relation(fields: [avatarUUID], references: [uuid])
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}
